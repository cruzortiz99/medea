{"version":3,"sources":["components/atoms/AppTable/index.tsx","components/atoms/AppTable/AppTable.module.css","pages/TestLab/index.tsx"],"names":["AppTable","props","bordered","cellBordered","showHeader","wordWrap","data","dataTable","height","headerHeight","heightHeaderCell","className","styles","borderTable","columns","length","map","keyName","key","Column","flexGrow","flexGrowColumn","minWidth","minWidthColumn","align","alingColumn","HeaderCell","headerColor","headerCell","Cell","dataKey","undefined","columnGroups","ColumnGroup","header","headers","alingHeader","extraColumns","module","exports","TestPage","data0","data1","data2","data3","data4","data5","data6","data7","data8","data9","data10","data11"],"mappings":"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","file":"static/js/10.ef1ec601.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\"\r\nimport { Container, Table } from \"rsuite\"\r\nimport styles from \"./AppTable.module.css\"\r\n\r\nexport type AppTableColumnGroup = {\r\n  headers?: string\r\n  alingHeader?: \"left\" | \"center\" | \"right\"\r\n  columns: AppTableColumn[]\r\n}\r\n\r\nexport type AppTableColumn = {\r\n  headerCell: string\r\n  dataKey: string\r\n  flexGrowColumn?: number\r\n  alingColumn?: \"left\" | \"center\" | \"right\"\r\n  minWidthColumn?: number\r\n}\r\n\r\nexport type AppTableProps = {\r\n  dataTable: any[]\r\n  height?: number\r\n  heightHeaderCell?: number\r\n  columns: AppTableColumn[]\r\n  columnGroups?: AppTableColumnGroup[]\r\n  extraColumns?: AppTableColumn[]\r\n}\r\n\r\nfunction AppTable(props: AppTableProps): JSX.Element {\r\n  return (\r\n    <Container>\r\n      <Table\r\n        bordered\r\n        cellBordered\r\n        showHeader\r\n        wordWrap\r\n        data={props.dataTable}\r\n        height={props.height}\r\n        headerHeight={props.heightHeaderCell}\r\n        className={styles.borderTable}\r\n      >\r\n        {props.columns && props.columns.length > 0\r\n          ? props.columns.map((keyName, key) => (\r\n              <Table.Column\r\n                key={key}\r\n                flexGrow={keyName.flexGrowColumn}\r\n                minWidth={keyName.minWidthColumn}\r\n                align={keyName.alingColumn}\r\n              >\r\n                <Table.HeaderCell className={styles.headerColor}>\r\n                  {typeof keyName === \"string\" ? keyName : keyName.headerCell}\r\n                </Table.HeaderCell>\r\n                <Table.Cell dataKey={keyName.dataKey} />\r\n              </Table.Column>\r\n            ))\r\n          : undefined}\r\n        {props.columnGroups?.map((keyName, key) => (\r\n          <Table.ColumnGroup\r\n            key={key}\r\n            header={keyName.headers}\r\n            align={keyName.alingHeader}\r\n          >\r\n            {keyName.columns && keyName.columns.length > 0\r\n              ? keyName.columns.map((keyName, key) => (\r\n                  <Table.Column\r\n                    key={key}\r\n                    flexGrow={keyName.flexGrowColumn}\r\n                    minWidth={keyName.minWidthColumn}\r\n                    align={keyName.alingColumn}\r\n                  >\r\n                    <Table.HeaderCell className={styles.headerColor}>\r\n                      {typeof keyName === \"string\"\r\n                        ? keyName\r\n                        : keyName.headerCell}\r\n                    </Table.HeaderCell>\r\n                    <Table.Cell dataKey={keyName.dataKey} />\r\n                  </Table.Column>\r\n                ))\r\n              : undefined}\r\n          </Table.ColumnGroup>\r\n        ))}\r\n        {props.extraColumns && props.extraColumns.length > 0\r\n          ? props.extraColumns.map((keyName, key) => (\r\n              <Table.Column\r\n                key={key}\r\n                flexGrow={keyName.flexGrowColumn}\r\n                minWidth={keyName.minWidthColumn}\r\n                align={keyName.alingColumn}\r\n              >\r\n                <Table.HeaderCell className={styles.headerColor}>\r\n                  {typeof keyName === \"string\" ? keyName : keyName.headerCell}\r\n                </Table.HeaderCell>\r\n                <Table.Cell dataKey={keyName.dataKey} />\r\n              </Table.Column>\r\n            ))\r\n          : undefined}\r\n      </Table>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AppTable\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderTable\":\"AppTable_borderTable__iZsYW\",\"headerColor\":\"AppTable_headerColor__24Hje\"};","import React from \"react\"\r\nimport AppPlot from \"../../components/atoms/AppPlot\"\r\nimport AppTable from \"../../components/atoms/AppTable\"\r\nimport { randomColor } from \"../../utils/css\"\r\nfunction TestPage() {\r\n  return (\r\n    <>\r\n      <h2>TestLab</h2>\r\n      <AppTable\r\n      dataTable={[\r\n        {\r\n          data0: \"lorem\",\r\n          data1: \"X\",\r\n          data2: 123,\r\n          data3: \"lorem\",\r\n          data4: 123.123,\r\n          data5: \"lorem\",\r\n          data6:  123,\r\n          data7: \"X\",\r\n          data8: \"lorem\",\r\n          data9: \"X\",\r\n          data10: 123.123,\r\n          data11: \"lorem\"\r\n        },\r\n        {\r\n          data0: \"lorem\",\r\n          data1: \"X\",\r\n          data2: 123,\r\n          data3: \"lorem\",\r\n          data4: 123.123,\r\n          data5: \"lorem\",\r\n          data6:  123,\r\n          data7: \"X\",\r\n          data8: \"lorem\",\r\n          data9: \"X\",\r\n          data10: 123.123,\r\n          data11: \"lorem\"\r\n        },\r\n        {\r\n          data0: \"lorem\",\r\n          data1: \"X\",\r\n          data2: 123,\r\n          data3: \"lorem\",\r\n          data4: 123.123,\r\n          data5: \"lorem\",\r\n          data6:  123,\r\n          data7: \"X\",\r\n          data8: \"lorem\",\r\n          data9: \"X\",\r\n          data10: 123.123,\r\n          data11: \"lorem\"\r\n        },\r\n        {\r\n          data0: \"lorem\",\r\n          data1: \"X\",\r\n          data2: 123,\r\n          data3: \"lorem\",\r\n          data4: 123.123,\r\n          data5: \"lorem\",\r\n          data6:  123,\r\n          data7: \"X\",\r\n          data8: \"lorem\",\r\n          data9: \"X\",\r\n          data10: 123.123,\r\n          data11: \"lorem\"\r\n        },\r\n        {\r\n          data0: \"lorem\",\r\n          data1: \"X\",\r\n          data2: 123,\r\n          data3: \"lorem\",\r\n          data4: 123.123,\r\n          data5: \"lorem\",\r\n          data6:  123,\r\n          data7: \"X\",\r\n          data8: \"lorem\",\r\n          data9: \"X\",\r\n          data10: 123.123,\r\n          data11: \"lorem\"\r\n        },\r\n        {\r\n          data0: \"lorem\",\r\n          data1: \"X\",\r\n          data2: 123,\r\n          data3: \"lorem\",\r\n          data4: 123.123,\r\n          data5: \"lorem\",\r\n          data6:  123,\r\n          data7: \"X\",\r\n          data8: \"lorem\",\r\n          data9: \"X\",\r\n          data10: 123.123,\r\n          data11: \"lorem\"\r\n        },\r\n        {\r\n          data0: \"lorem\",\r\n          data1: \"X\",\r\n          data2: 123,\r\n          data3: \"lorem\",\r\n          data4: 123.123,\r\n          data5: \"lorem\",\r\n          data6:  123,\r\n          data7: \"X\",\r\n          data8: \"lorem\",\r\n          data9: \"X\",\r\n          data10: 123.123,\r\n          data11: \"lorem\"\r\n        },\r\n      ]}\r\n      height={500}\r\n      heightHeaderCell={80}\r\n      columns={[\r\n        {\r\n          headerCell: \"Data0\",\r\n          dataKey: \"data0\",\r\n          flexGrowColumn: 1,\r\n          minWidthColumn: 100,\r\n          alingColumn: \"center\"\r\n        },\r\n        {\r\n          headerCell: \"Data1\",\r\n          dataKey: \"data1\",\r\n          flexGrowColumn: 1,\r\n          minWidthColumn: 100,\r\n          alingColumn: \"center\"\r\n        },\r\n        {\r\n          headerCell: \"Data2\",\r\n          dataKey: \"data2\",\r\n          flexGrowColumn: 1,\r\n          minWidthColumn: 100,\r\n          alingColumn: \"center\"\r\n        },\r\n        {\r\n          headerCell: \"Data3\",\r\n          dataKey: \"data3\",\r\n          flexGrowColumn: 1,\r\n          minWidthColumn: 100,\r\n          alingColumn: \"center\"\r\n        },\r\n        {\r\n          headerCell: \"Data4\",\r\n          dataKey: \"data4\",\r\n          flexGrowColumn: 1,\r\n          minWidthColumn: 100,\r\n          alingColumn: \"center\"\r\n        },\r\n      ]}\r\n      columnGroups={[\r\n        {\r\n          headers: \"Column0\",\r\n          alingHeader: \"center\",\r\n          columns: [\r\n            {\r\n              headerCell: \"Data5\",\r\n              dataKey: \"data5\",\r\n              flexGrowColumn: 1,\r\n              minWidthColumn: 100,\r\n              alingColumn: \"center\"\r\n            },\r\n            {\r\n              headerCell: \"Data6\",\r\n              dataKey: \"data6\",\r\n              flexGrowColumn: 1,\r\n              minWidthColumn: 100,\r\n              alingColumn: \"center\"\r\n            },\r\n            {\r\n              headerCell: \"Data7\",\r\n              dataKey: \"data7\",\r\n              flexGrowColumn: 1,\r\n              minWidthColumn: 100,\r\n              alingColumn: \"center\"\r\n            },\r\n          ]\r\n        },\r\n        {\r\n          headers: \"Column1\",\r\n          alingHeader: \"center\",\r\n          columns: [\r\n            {\r\n              headerCell: \"Data8\",\r\n              dataKey: \"data8\",\r\n              flexGrowColumn: 1,\r\n              minWidthColumn: 100,\r\n              alingColumn: \"center\"\r\n            },\r\n            {\r\n              headerCell: \"Data9\",\r\n              dataKey: \"data9\",\r\n              flexGrowColumn: 1,\r\n              minWidthColumn: 100,\r\n              alingColumn: \"center\"\r\n            },\r\n            {\r\n              headerCell: \"Data10\",\r\n              dataKey: \"data10\",\r\n              flexGrowColumn: 1,\r\n              minWidthColumn: 100,\r\n              alingColumn: \"center\"\r\n            },\r\n          ]\r\n        },\r\n      ]}\r\n      extraColumns={[\r\n        {\r\n          headerCell: \"Data11\",\r\n          dataKey: \"data11\",\r\n          flexGrowColumn: 1,\r\n          alingColumn: \"center\",\r\n          minWidthColumn: 100\r\n        },\r\n      ]}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestPage\r\n"],"sourceRoot":""}