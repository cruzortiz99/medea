{"version":3,"sources":["store/home/index.ts","utils/rx/hooks.ts","pages/AlertAndFailure/index.tsx"],"names":["homeStore","rightMenuOptions","BehaviorSubject","isLoading","useObservable","observable","useState","value","setValue","observableRef","useRef","useEffect","subscription","current","subscribe","unsubscribe","AlertAndFailurePage","props","rightMenuSubject","next","label","href"],"mappings":"4FAAA,+CAQaA,EAAY,CACvBC,iBAL4B,IAAIC,IAAmC,IAMnEC,UAJsB,IAAID,KAAyB,IAOtCF,O,sFCVR,SAASI,EAA0CC,GACxD,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAgBC,iBAAOL,GAK7B,OAJAM,qBAAU,WACR,IAAMC,EAAeH,EAAcI,QAAQC,UAAUN,GACrD,OAAO,kBAAMI,EAAaG,iBACzB,CAACN,EAAcI,UACX,CAACN,EAAOE,EAAcI,W,oFCmChBG,UAxCf,SAA6BC,GAC3B,MAA8Bb,YAAcJ,IAAUC,kBAAtD,mBAAUiB,GAAV,WAoCA,OAnCAP,qBAAU,WA+BR,OA9BAO,EAAiBC,KAAK,CACpB,CACEC,MAAO,SACPC,KAAM,WAER,CACED,MAAO,SACPC,KAAM,aAER,CACED,MAAO,4BACPC,KAAM,uBAER,CACED,MAAO,yBACPC,KAAM,WAER,CACED,MAAO,0BACPC,KAAM,aAER,CACED,MAAO,qBACPC,KAAM,eAER,CACED,MAAO,wBACPC,KAAM,mBAGH,WACLH,EAAiBC,KAAK,OAEvB,IACI","file":"static/js/6.51b1afab.chunk.js","sourcesContent":["import { BehaviorSubject } from \"rxjs\"\r\n\r\nexport type RightMenuOption = {label: string, href: string}\r\n\r\n const rightMenuOptionStore = new BehaviorSubject<RightMenuOption[]>([])\r\n\r\n const isLoadingStore = new BehaviorSubject<boolean>(false)\r\n\r\nexport const homeStore = {\r\n  rightMenuOptions: rightMenuOptionStore,\r\n  isLoading: isLoadingStore\r\n}\r\n\r\nexport default homeStore","import { useEffect, useRef, useState } from \"react\"\r\nimport { Observable } from \"rxjs\"\r\n\r\nexport function useObservable<T, O extends Observable<T>>(observable: O):[T|undefined,O] {\r\n  const [value, setValue] = useState<T>()\r\n  const observableRef = useRef(observable)\r\n  useEffect(() => {\r\n    const subscription = observableRef.current.subscribe(setValue)\r\n    return () => subscription.unsubscribe()\r\n  }, [observableRef.current])\r\n  return [value, observableRef.current]\r\n}","import React, { useEffect } from \"react\"\nimport { AppRoutedPage } from \"../../routes/routes\"\nimport homeStore from \"../../store/home\"\nimport { useObservable } from \"../../utils/rx/hooks\"\n\nfunction AlertAndFailurePage(props: AppRoutedPage) {\n  const [_, rightMenuSubject] = useObservable(homeStore.rightMenuOptions)\n  useEffect(() => {\n    rightMenuSubject.next([\n      {\n        label: \"Avisos\",\n        href: \"#alerts\",\n      },\n      {\n        label: \"Fallas\",\n        href: \"#failures\",\n      },\n      {\n        label: \"Equipos fuera de servicio\",\n        href: \"#eqs-out-of-service\",\n      },\n      {\n        label: \"Equipos en segmento PF\",\n        href: \"#eqs-pf\",\n      },\n      {\n        label: \"Reparaciones Temporales\",\n        href: \"#temp-fix\",\n      },\n      {\n        label: \"Requeridos por SHA\",\n        href: \"#req-by-sha\",\n      },\n      {\n        label: \"Historial de trabajos\",\n        href: \"#work-history\",\n      },\n    ])\n    return () => {\n      rightMenuSubject.next([])\n    }\n  }, [])\n  return <h3>Avisos y fallas</h3>\n}\n\nexport default AlertAndFailurePage\n"],"sourceRoot":""}