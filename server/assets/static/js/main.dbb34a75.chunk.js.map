{"version":3,"sources":["reportWebVitals.ts","routes/index.tsx","routes/lazyComponents.ts","components/atoms/SuspenseWrapper/index.tsx","routes/routes.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppRouter","props","routes","map","route","key","path","element","component","React","memo","LazyComponent","ROUTES","pageName","lazy","fallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kKAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qBCHd,SAASQ,EAAUC,GACjB,OACE,cAAC,IAAD,UACGA,EAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAChB,cAAC,IAAD,CAEEC,KAAMF,EAAME,KACZC,QAAS,cAACH,EAAMI,UAAP,eAAqBJ,KAFzBC,QASAI,UAAMC,KAAKV,GClBnB,ICA4BW,ECmBpBC,EAPY,CACzB,CACEN,KAAM,IACNO,SAAU,OACVL,WDhB+BG,EDAfF,IAAMK,MAAK,kBAAM,gCCC5B,SAACb,GAAD,OACP,cAAC,WAAD,CAAUc,SAAU,qDAApB,SACE,cAACJ,EAAD,eAAmBV,UEGvBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,CAAWhB,OAAQA,QAGvBiB,SAASC,eAAe,SAM1B7B,M","file":"static/js/main.dbb34a75.chunk.js","sourcesContent":["import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport { Route, Routes } from \"react-router\"\nimport { AppRoute } from \"./routes\"\nexport type AppRouterProps = {\n  routes: AppRoute[]\n}\nfunction AppRouter(props: AppRouterProps): JSX.Element {\n  return (\n    <Routes>\n      {props.routes.map((route, key) => (\n        <Route\n          key={key}\n          path={route.path}\n          element={<route.component {...route} />}\n        />\n      ))}\n    </Routes>\n  )\n}\n\nexport default React.memo(AppRouter)\n","import React from \"react\"\r\n\r\nexport const Home = React.lazy(() => import(\"../pages/Home/App\"))","import React, {Suspense} from \"react\"\r\n\r\nexport function suspenseWrapper<T>(LazyComponent: React.ExoticComponent<T>){\r\n  return (props: T) => (\r\n  <Suspense fallback={<h1>Loading please wait</h1>}>\r\n    <LazyComponent {...props} />\r\n  </Suspense>)\r\n}","import React from \"react\"\nimport { suspenseWrapper } from \"../components/atoms/SuspenseWrapper\"\nimport { Home } from \"./lazyComponents\"\n\n\nexport type AppRoute = AppRoutedPage & {\n  path: string\n  component: (props: AppRoutedPage) => JSX.Element\n}\n\nexport type AppRoutedPage = {\n  pageName: string\n  routes?: AppRoute[]\n}\nconst ROUTES: AppRoute[] = [\n  {\n    path: \"/\",\n    pageName: \"Home\",\n    component: suspenseWrapper(Home)\n  },\n]\nexport default ROUTES\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"./assets/css/index.css\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport AppRouter from \"./routes\"\nimport routes from \"./routes/routes\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AppRouter routes={routes} />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}